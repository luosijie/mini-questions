<template>
  <view class="main">
    <view class="top">
      <view class="title">小题卡</view>
      <view class="you">
        <view class="photo">
          <image src="{{ user.avatarUrl }}" mode="aspectFit"></image>
        </view>
        <view class="name">{{ user.nickName }}</view>
      </view>
      <view class="button" bindtap="toCreate">创建题卡</view>
      <view class="menu">
        <view class="menu-item" bindtap="toList('create')">
          <i class="value iconfont icon-q"></i>
          <text class="label">我创建的</text>
        </view>
        <view class="menu-item" bindtap="toList('answer')">
          <i class="value iconfont icon-a"></i>
          <text class="label">我回答的</text>
        </view>
        <view class="menu-item" bindtap="toSketch">
          <i class="value iconfont icon-sketch"></i>
          <text class="label">草稿箱</text>
        </view>
      </view>
    </view>
    <scroll-view scroll-y="true" class="records" bindscrolltolower="getRecords('push')">
      <view class="empty" wx:if="{{ records && !records.length }}"> 暂无数据 </view>
      <block wx:else>
        <view class="record" wx:for="{{ records }}" wx:key="_id" bindtap="toDetail(index)">
          <image src="{{ item.creator.avatarUrl }}"></image>
          <view class="content">
            <view class="info" wx:style="{{ { color: item.readed ? '#999' : '#333' } }}">
              <view class="title">{{ item.creator.nickName }} 完成了你的题卡“{{ item.question.title }}”</view>
              <view class="score">正确率：{{ item.score }}</view>
            </view>
            <view class="state">
              <view class="if-read">{{ item.readed ? '已读' : '未读' }}</view>
              <view class="date">{{ item.createTime }}</view>
            </view>
          </view>
        </view>
      </block>
    </scroll-view>
  </view>
</template>

<script>
  import { createPage } from '@mpxjs/core'
  createPage({
    data: {
      records: null,
      user: {},
      size: 10,
      no: 1,
      total: 0
    },
    onLoad () {
      this.user = wx.getStorageSync('user')
      this.getRecords()
    },
    methods: {
      async getRecords (type) {
        if (this.records && this.records.length >= this.total) return
        if (type === 'push') {
          this.no++
        } else {
          this.no = 1
        }
        wx.showLoading({
          title: '加载中...'
        })
        const res = await wx.cloud.callFunction({
          name: 'answerPage',
          data: {
            size: this.size,
            no: this.no
          }
        })
        wx.hideLoading()
        this.total = res.result.total
        if (this.no > 1) {
          this.records = this.records.concat(res.result.data)
        } else {
          this.records = res.result.data
        }
        console.log('answer:', this.records)
        wx.stopPullDownRefresh()
      },
      toCreate () {
        wx.navigateTo({
          url: 'new'
        })
      },
      toList (type) {
        wx.navigateTo({
          url: `list-question?type=${type}`
        })
      },
      toSketch () {
        wx.showToast({
          title: '功能未开发',
          icon: 'none'
        })
      },
      async toDetail (index) {
        const record = this.records[index]
        console.log('detail:', record)
        if (!record.readed) {
          const res = await wx.cloud.callFunction({
            name: 'answerRead',
            data: {
              _id: record._id
            }
          })
          if (res.result.success) {
            record.readed = true
            this.$set(this.records, index, record)
          }
          // console.log('rs', res)
        }
        wx.navigateTo({
          url: `result?_id=${record._id}`
        })
      }
    }
  })
</script>

<script type="application/json">
  {
    "navigationStyle": "custom",
    "usingComponents": {
    }
  }
</script>
<style lang="less" scoped>
@import url('../assets/font/iconfont.css');
.main {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
}
.top {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: #40A9FF;
  color: white;
  height: 650rpx;
  background-image: url(../assets/images/background.png);
  background-size: 100% 100%;
  .title {
    height: 90rpx;
    line-height: 90rpx;
    margin-top: 40rpx;
  }
  .you {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 30rpx 0;
    .photo {
      width: 128rpx;
      height: 128rpx;
      border-radius: 50%;
      background: #ffffff60;
      margin-bottom: 20rpx;
      overflow: hidden;
      border: 6rpx solid #ffffff40;
      image {
        width: 100%;
        height: 100%;
      }
    }
  }
  .button {
    background: #ffffff20;
    height: 50rpx;
    border-radius: 25rpx;
    border: 2rpx solid #ffffff;
    padding: 0 20rpx;
    line-height: 50rpx;
    font-size: 24rpx;
  }
  .menu {
    display: flex;
    margin-top: 40rpx;
    .menu-item {
      display: flex;
      flex-direction: column;
      align-items: center;
      &:not(:last-child) {
        margin-right: 150rpx;
      }
      .value {
        font-size: 38rpx;
        margin-bottom: 10rpx;
      }
      .label {
        font-size: 20rpx;
      }
    }
  }
}
.records {
  width: 100vw;
  height: calc(100% - 650rpx);
  position: relative;
  overflow: hidden;
  padding: 30rpx 20rpx;
  box-sizing: border-box;
  .empty {
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    color: #999;
    size: 24rpx;
  }
  .record {
    display: flex;
    margin-bottom: 30rpx;
    image {
      width: 60rpx;
      height: 60rpx;
      border-radius: 50%;
      background: #eee;
      margin-top: 10rpx;
    }
    .content {
      padding-left: 10rpx;
      font-size: 24rpx;
      width: calc(100% - 60rpx);
      .info, .state {
        display: flex;
        justify-content: space-between;
      }
      .info {
        height: 80rpx;
        border: 1rpx solid #eee;
        border-radius: 8rpx;
        padding: 10rpx;
        align-items: center;
      }
      .state {
        font-size: 20rpx;
        color: #999;
        margin-top: 5rpx;
      }
    }
  }
}
</style>
